{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "The amazing contacts API",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of Amazing contacts API\n"
  },
  "servers": [
    {
      "url": "http://127.0.0.1:8080"
    }
  ],
  "tags": [
    {
      "name": "Contacts",
      "description": "Contacts endpoints"
    },
    {
      "name": "Auth",
      "description": "Auth endpoints"
    }
  ],
  "paths": {
    "/contacts/{id}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get contact by id",
        "operationId": "getContact",
        "description": "Get contact by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "68ec15f83c216be234e84065"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found contact with id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contact with id"
                    },
                    "data": {
                      "$ref": "#/components/schemas/contacts"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete contact",
        "operationId": "deleteContact",
        "description": "Delete contact by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "68ec15f83c216be234e84065"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully found contact with id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contact with id"
                    },
                    "data": {
                      "$ref": "#/components/schemas/contacts"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Patch contact",
        "operationId": "patchContact",
        "description": "Patch contact by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "68ec15f83c216be234e84065"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Contact name",
                    "minLength": 3,
                    "maxLength": 50,
                    "example": "Ivan Pavelko"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "description": "Contact phone number",
                    "example": 380200000001
                  },
                  "contactType": {
                    "type": "string",
                    "description": "Contact type",
                    "enum": [
                      "work",
                      "home",
                      "personal"
                    ],
                    "example": "home"
                  },
                  "email": {
                    "type": "string",
                    "description": "Contact email",
                    "example": "ivan@gmail.com"
                  },
                  "photo": {
                    "type": "string",
                    "description": "Contact photo",
                    "example": "http://localhost:8080/photos/1760298573710-175228118_IMG_0473.jpg"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully patched a contact!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched a contact!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/contacts"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get all contacts",
        "operationId": "getAllContacts",
        "description": "Get your all contacts",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "description": "Current page",
            "schema": {
              "type": "integer",
              "default": 1,
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "required": false,
            "description": "Number of contacts in a single page",
            "schema": {
              "type": "integer",
              "default": 10,
              "example": 8
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "required": false,
            "description": "Sort contacts by name",
            "schema": {
              "type": "string",
              "default": "_id",
              "example": "name"
            }
          },
          {
            "in": "query",
            "name": "sortOrder",
            "required": false,
            "description": "sorts the contacts in ascending or descending order",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc",
              "example": "desc"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "required": false,
            "description": "filter the contacts by chosen params",
            "schema": {
              "type": "string",
              "enum": [
                "work",
                "home",
                "personal"
              ],
              "example": "work"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found contacts!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contacts!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages",
                        "hasPreviousPage",
                        "hasNextPage"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/contacts"
                          }
                        },
                        "page": {
                          "type": "number",
                          "example": 2
                        },
                        "perPage": {
                          "type": "number",
                          "example": 8
                        },
                        "totalItems": {
                          "type": "number",
                          "example": 12
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 5
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create contact",
        "operationId": "createContact",
        "description": "Create a new contact",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/post_contacts_request"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created a contact!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a contact!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/contacts"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register user",
        "operationId": "registerUser",
        "description": "Register a new user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User name",
                    "maxLength": 64,
                    "example": "Denis Fox"
                  },
                  "email": {
                    "type": "string",
                    "description": "User email",
                    "uniqueItems": true,
                    "example": "denis@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "User password",
                    "minLength": 6,
                    "maxLength": 30,
                    "example": "my_password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully registered a user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a user!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/users"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login user",
        "operationId": "loginUser",
        "description": "Logs in a registered user and creates a session.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "User email",
                    "uniqueItems": true,
                    "example": "denis@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "User password",
                    "example": "my_password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged in an user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in an user!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "description": "Session access token",
                          "example": "5l+UVa45N00kChWDGLPeY1qy5H/vb4Het66h9vr9"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout user",
        "operationId": "logoutUser",
        "description": "Ends user session",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "_id"
                ],
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Session ID",
                    "example": "68f4b3f2798f29a7c445f0d0"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No content"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh user session",
        "operationId": "refreshUserSession",
        "description": "Refresh user session creating new pear of access and refresh tokens  .",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "_id",
                  "refreshToken"
                ],
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Session ID",
                    "example": "68f4e2cd5bd18b92feb71a6c"
                  },
                  "refreshToken": {
                    "type": "string",
                    "description": "Refresh token of session",
                    "example": "+v6IL9HPf7EwJzFHqxFB8WoKLfmQShzTG97XqNIk"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully refreshed a session!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed a session!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "description": "Session access token",
                          "example": "5l+UVa45N00kChWDGLPeY1qy5H/vb4Het66h9vr9"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Session not found | Session token ispired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "Session not found | Session token ispired"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/send-reset-email": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Send reset email",
        "operationId": "sendResetEmail",
        "description": "Sends an email with a password reset link that contains a JWT token. The link allows the user to reset their password. Example link structure: `https://your-frontend-domain.com/auth/reset-password?token=<JWT_TOKEN>`\nThe JWT token is valid for a limited time 5 min and encodes the user's ID and expiration timestamp.\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "User email to which the reset link will be sent",
                    "example": "denis2@gmail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset password email has been successfully sent.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Reset password email has been successfully sent."
                    },
                    "data": {
                      "type": "object",
                      "description": "Empty object (no response body content)"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/reset-pwd": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Reset user password",
        "operationId": "resetPassword",
        "description": "Resets the user's password using a JWT token received by email. The token is generated when the user requests a password reset via the `/auth/send-reset-email` endpoint. It is valid for a 5 min.\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "token",
                  "password"
                ],
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "JWT token from the reset email link. It encodes the user's ID and expires after 5min.",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6Ik..."
                  },
                  "password": {
                    "type": "string",
                    "description": "New password for the user.",
                    "minLength": 6,
                    "maxLength": 30,
                    "example": "MyNewPassword123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password has been successfully reset.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Password has been successfully reset."
                    },
                    "data": {
                      "type": "object",
                      "description": "Empty object (no response body content)"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "session": {
        "type": "object",
        "title": "Session",
        "description": "Represents a user session created during login.",
        "required": [
          "_id",
          "userId",
          "accessToken",
          "refreshToken",
          "accessTokenValidUntil",
          "refreshTokenValidUntil",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "Session ID",
            "example": "68f4e2cd5bd18b92feb71a6c"
          },
          "userId": {
            "type": "string",
            "description": "User ID",
            "example": "68e136579080ee18ea7299a4"
          },
          "accessToken": {
            "type": "string",
            "description": "Session access token",
            "example": "5l+UVa45N00kChWDGLPeY1qy5H/vb4Het66h9vr9"
          },
          "refreshToken": {
            "type": "string",
            "description": "Session refresh token",
            "example": "5l+UVa45N00kChWDGLPeY1qy5H/vb4Het66h9vr9"
          },
          "accessTokenValidUntil": {
            "type": "string",
            "format": "date-time",
            "description": "Expiration time of the access token. Access token is valid for **2 hours** from creation.\n",
            "example": "2025-10-19T15:38:29.669+00:00"
          },
          "refreshTokenValidUntil": {
            "type": "string",
            "format": "date-time",
            "description": "Expiration time of the refresh token. Refresh token is valid for **30 days** from creation.\n",
            "example": "2025-11-18T13:08:29.669+00:00"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date of session creation",
            "example": "2025-10-19T13:08:29.670+00:00"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date of session last update",
            "example": "2025-10-19T13:08:29.670+00:00"
          }
        }
      },
      "contacts": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "phoneNumber",
          "email",
          "isFavourite",
          "contactType",
          "photo",
          "userId",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "Contact id",
            "example": "68ec15f83c216be234e84065"
          },
          "name": {
            "type": "string",
            "description": "Contact name",
            "example": "Olga Koval"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number of the contact",
            "example": 380200000009
          },
          "email": {
            "type": "string",
            "description": "Email of the contact",
            "example": "olgas@mail.com"
          },
          "isFavourite": {
            "type": "boolean",
            "description": "Is contact a favorite",
            "default": false,
            "example": true
          },
          "contactType": {
            "type": "string",
            "description": "Type of the contact",
            "enum": [
              "work",
              "home",
              "personal"
            ],
            "default": "personal",
            "example": "home"
          },
          "photo": {
            "type": "string",
            "description": "Photo of the contact",
            "default": null,
            "example": "https://res.cloudinary.com/dyy6iuikt/image/upload/v1760302583/lwjtcjei2yw73vra2pbp.jpg"
          },
          "userId": {
            "type": "string",
            "description": "User owner id",
            "example": "68e136579080ee18ea7299a4"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-10-12T20:56:24.006Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-10-12T21:37:03.042Z"
          }
        }
      },
      "post_contacts_request": {
        "type": "object",
        "required": [
          "name",
          "phoneNumber",
          "contactType"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Contact name",
            "minLength": 3,
            "maxLength": 50,
            "example": "Ivan Pavelko"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Contact phone number",
            "example": 380200000001
          },
          "contactType": {
            "type": "string",
            "description": "Contact type",
            "enum": [
              "work",
              "home",
              "personal"
            ],
            "example": "home"
          },
          "email": {
            "type": "string",
            "description": "Contact email",
            "example": "ivan@gmail.com"
          },
          "photo": {
            "type": "string",
            "description": "Contact photo",
            "example": "http://localhost:8080/photos/1760298573710-175228118_IMG_0473.jpg"
          }
        }
      },
      "users": {
        "type": "object",
        "required": [
          "name",
          "email",
          "_id",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "User name",
            "example": "Denis Fox"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "example": "denis@gmail.com"
          },
          "_id": {
            "type": "string",
            "description": "User id",
            "example": "68f4a1fdd5968b7d7e5b54fc"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-10-19T08:31:57.767Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-10-19T08:31:57.767Z"
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Bad Request"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized Error"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "NotFoundError",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "NotFoundError"
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "ConflictError",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "Email in use"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    }
  }
}